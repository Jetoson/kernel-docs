name: Create docx files release
on:
  push:
    branches: ['main']
    # Add as many file paths as needed, each triggering the workflow when modified
    paths:
      - 'docs/how-to/build-publish/build-kernel.md'
      - 'docs/how-to/build-publish/build-kernel-snap.md'
jobs:
  createDocxRelease:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out documentation repository.
        uses: actions/checkout@v4
      - name: Generate HTML and convert to DOCX.
        working-directory: docs
        run: make html-docx
      - name: Get current date and time to be used as new tag.
        id: get_date_time
        run: |
          RELEASE_TAG="v$(date -u +'%Y.%m.%d-%H.%M')"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
      - name: Create a new tag.
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.RELEASE_TAG }}',
              sha: context.sha
            })
      # Create a new release that is associated with the tag created in the
      # previous step.
      - name: Create a tagged release.
        id: create_release
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ env.RELEASE_TAG }}",
              name: "${{ env.RELEASE_TAG }}",
              body: "${{ env.RELEASE_TAG }}",
              draft: false,
              prerelease: false
            });
            console.log(response.data);
            core.exportVariable('RELEASE_ID', response.data.id.toString());
            core.exportVariable('UPLOAD_URL', response.data.upload_url);
      - name: Display Release ID and Upload URL
        run: |
          echo "Release ID: ${{ env.RELEASE_ID }}"
          echo "Upload URL: ${{ env.UPLOAD_URL }}"
      - name: Upload release asset (docx files).
        id: upload_release_asset
        uses: actions/github-script@v7
        with:
            script: |
              const fs = require('fs');
              const path = require('path');
        
              // Specify the directory containing the DOCX files to upload
              const directory = './docs/_build/docx/';
              const files = fs.readdirSync(directory);
        
              for (const file of files) {
                if (path.extname(file) === '.docx') { // Adjust this if need to include other file types
                  const filePath = path.join(directory, file);
                  const fileContent = fs.readFileSync(filePath);
        
                  console.log(`Uploading ${file}...`);
                  github.rest.repos.uploadReleaseAsset({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    release_id: "${{ env.RELEASE_ID }}",
                    name: file,
                    data: fileContent,
                    headers: {
                      'content-type': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                      'content-length': fileContent.length
                    }
                  });
                }
              }
